{% extends "base.twig" %}

{% block title %}Login - Fix & Fast{% endblock %}

{% block content %}
    <div class="flex justify-center items-center py-12">
        <div class="w-full max-w-md bg-[#7f49a7ff] p-10 rounded-2xl shadow-xl">
            <h2 class="text-5xl font-bold text-center mb-8 text-[#eebff0ff]">
                Welcome Back!
            </h2>
            <form id="loginForm" class="space-y-6">
                <div>
                    <label class="block text-lg font-medium mb-2" for="email">Email</label>
                    <input 
                        type="email" 
                        id="email"
                        name="email"
                        required
                        class="w-full px-4 py-3  bg-[#FFFFFF] border border-[#e498d1ff] rounded-lg focus:outline-none focus:ring-2 focus:[#eebff0ff]"
                    />
                    <p class="text-red-500 text-sm mt-1 hidden" id="emailError"></p>
                </div>

                <div>
                    <label class="block text-lg font-medium mb-2" for="password">Password</label>
                    <input 
                        type="password" 
                        id="password"
                        name="password"
                        required
                        class="w-full px-4 py-3 bg-[#FFFFFF] border border-[#e498d1ff] rounded-lg focus:outline-none focus:ring-2 focus:[#eebff0ff]"
                    />
                    <p class="text-red-500 text-sm mt-1 hidden" id="passwordError"></p>
                </div>

                <button 
                    type="submit"
                    class="w-full py-3 text-[#FFFFFF] font-semibold rounded-lg hover:text-[#eebff0ff] text-2xl"
                >
                    Login
                </button>
            </form>

            <p class="text-center mt-6">
                Don't have an account? 
                <a href="/auth/signup" class="font-semibold text-[#4B0082] hover:text-[#eebff0ff]">
                    Sign Up
                </a>
            </p>
        </div>
    </div>
{% endblock %}

{% block scripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const loginForm = document.getElementById('loginForm');
            const emailError = document.getElementById('emailError');
            const passwordError = document.getElementById('passwordError');

            function showError(element, message) {
                element.textContent = message;
                element.classList.remove('hidden');
            }

            function hideError(element) {
                element.textContent = '';
                element.classList.add('hidden');
            }

            function validateForm(email, password) {
                let isValid = true;
                
                // Reset error messages
                hideError(emailError);
                hideError(passwordError);

                // Validate email
                if (!email) {
                    showError(emailError, 'Email is required.');
                    isValid = false;
                } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
                    showError(emailError, 'Please enter a valid email address.');
                    isValid = false;
                }

                // Validate password
                if (!password) {
                    showError(passwordError, 'Password is required.');
                    isValid = false;
                }

                return isValid;
            }

            // ... inside login.twig script ...
            loginForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                const formData = new FormData(loginForm);
                const email = formData.get('email');
                const password = formData.get('password');

                if (!validateForm(email, password)) {
                    // Use the global toast
                    window.showToast('Please fix the errors in the form.', 'error');
                    return;
                }

                try {
                    await auth.login(email, password);
                    
                    // Get redirect URL from query parameters
                    const queryParams = new URLSearchParams(window.location.search);
                    const redirectUrl = queryParams.get('redirect') || '/dashboard';
                    
                    window.showToast('Login successful!', 'success');
                    window.location.href = redirectUrl;

                } catch (error) {
                    // --- USE THE NEW GLOBAL HANDLER ---
                    // It will automatically show the correct toast message
                    auth.handleApiError(error, 'Login failed. Please retry.');
                }
            });

            // Get redirect URL from query parameters
            const queryParams = new URLSearchParams(window.location.search);
            const redirectUrl = queryParams.get('redirect') || '/dashboard';
        });
    </script>
{% endblock %}