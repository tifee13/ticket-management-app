{# This is the base twig file, extend it from other twig files #}
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>{% block title %}Twig Starter Template{% endblock %}</title>
        {% block styles %}
            <link rel="stylesheet" href="/styles/out.tailwind.css">
            <style> 
            body {
                background-color: #eebff0ff;
                color: #4b0082;
                anatialiasing: antialiased;
                /* Make layout a column so footer can stick to bottom when content is short */
                display: flex;
                flex-direction: column;
                min-height: 100vh;
                }
        
                .app-container {
                    max-width: 1440px;
                    margin-left: auto;
                    margin-right: auto;
                    padding-left: 1rem;
                    padding-right: 1rem;
                }
                    @media (min-width: 640px) {
                    .app-container {
                        padding-left: 1.5rem; 
                        padding-right: 1.5rem;
                    }
                    }

                    @media (min-width: 1024px) {
                    .app-container {
                        padding-left: 2rem;    /* px-8 -> 2rem (32px) */
                        padding-right: 2rem;
                    }

                }

                /* Ensure the main content area grows to push footer to bottom */
                main.app-container {
                    flex: 1 0 auto;
                }
            </style>
        {% endblock %}
    </head>

    <body>
    
        <header class="bg-[#7f49a7ff] shadow-md">
            <nav class="app-container flex justify-between items-center h-24">
                <a href="/" class="text-4xl font-bold text-[#4B0082]">
                    Fix & Fast
                </a>

                <div class="hidden md:flex items-center gap-8">
                    <a href="/dashboard" data-auth-required="true" class="text-[#eebff0ff] hover:text-[#4B0082] auth-nav-item hidden">
                        Dashboard
                    </a>
                    <a href="/tickets" data-auth-required="true" class="text-[#eebff0ff] hover:text-[#4B0082] auth-nav-item hidden">
                        Tickets
                    </a>
                    <button type="button" data-auth-required="true" class="auth-nav-item hidden px-5 py-2 bg-[#FFFFFF] text-[#7f49a7ff] rounded-lg font-semibold hover:bg-[#4B0082] hover:text-[#FFFFFF] transition-colors logout-btn">
                        Logout
                    </button>

                    <a href="/auth/login" class=" text-[#eebff0ff] hover:text-[#4B0082] no-auth-nav-item">
                        Login
                    </a>
                    <a href="/auth/signup" class=" px-5 py-2 bg-[#FFFFFF] text-[#7f49a7ff] rounded-lg font-semibold hover:bg-[#4B0082] hover:text-[#FFFFFF] transition-colors no-auth-nav-item">
                        Sign up
                    </a>
                </div>

                <div class="md:hidden">
                    <button type="button" class="text-[#4B0082] mobile-menu-button">
                        <span class="sr-only">Menu</span>
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-8 h-8">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
                        </svg>
                    </button>
                </div>
            </nav>

        </header>
        {% include 'components/mobilemenu.twig' %}

        <main class="grow app-container py-8">
            {% block content %}
            {% endblock %}
        </main>


        <footer class="flex justify-center items-center bg-[#7f49a7ff] shadow-inner mt-16 text-center">
            <div class="app-container py-12">
                <div>
                    <ul class="flex justify-center space-x-4">
                        <li><a href="/" class="text-[#FFFFFF]/70 hover:text-[#FFFFFF]">Privacy Policy</a></li>
                        <li><a href="/" class="text-[#FFFFFF]/70 hover:text-[#FFFFFF]">Terms of Service</a></li>
                    </ul>
                </div>
                <p>&copy; {{ "now"|date("Y") }} Fix & Fast. All rights reserved.</p>
            </div>
        </footer>
        
        {% block scripts %}
            <!-- Authentication Service -->
            <script src="/services/auth.js"></script>
            
            <!-- Toast library for notifications -->
            <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
            
            <script>
                // Toast notification helper
                function showToast(message, type = 'success') {
                    Toastify({
                        text: message,
                        duration: 3000,
                        gravity: "top",
                        position: "right",
                        backgroundColor: type === 'success' ? "#4CAF50" : "#F44336",
                    }).showToast();
                }
                window.showToast = showToast;

                // Check authentication on protected routes
                document.addEventListener('DOMContentLoaded', function() {
                    const requiresAuth = {{ requiresAuth|default(false) ? 'true' : 'false' }};
                    
                    if (requiresAuth && !auth.isAuthenticated()) {
                    const currentPath = window.location.pathname;
                    showToast("You must log in to access this page.", "error");
                    setTimeout(() => {
                        window.location.href = `/auth/login?redirect=${encodeURIComponent(currentPath)}`;
                    }, 800);
                    return;
                    }


                    // Mobile menu functionality
                    const mobileMenuButton = document.querySelector('.mobile-menu-button');

                    mobileMenuButton?.addEventListener('click', function() {
                        // Call the global function from 'components/mobilemenu.twig'
                        if (typeof window.showMobileMenu === 'function') {
                            window.showMobileMenu();
                        } else {
                            console.error('Mobile menu component not loaded.');
                        }
                    });
                    // Update navigation based on auth state
                    const user = auth.getCurrentUser();
                    const authNavItems = document.querySelectorAll('.auth-nav-item');
                    const noAuthNavItems = document.querySelectorAll('.no-auth-nav-item');
                    
                    if (user) {
                        authNavItems.forEach(item => item.classList.remove('hidden'));
                        noAuthNavItems.forEach(item => item.classList.add('hidden'));
                    } else {
                        authNavItems.forEach(item => item.classList.add('hidden'));
                        noAuthNavItems.forEach(item => item.classList.remove('hidden'));
                    }

                    // Handle protected navigation
                    document.querySelectorAll('[data-auth-required="true"]').forEach(link => {
                        if (!user) {
                            link.addEventListener('click', (e) => {
                                e.preventDefault();
                                const targetPath = e.currentTarget.getAttribute('href');
                                if (targetPath) { // Only redirect if it's a link with href
                                    window.location.href = `/auth/login?redirect=${encodeURIComponent(targetPath)}`;
                                }
                            });
                        }
                    });

                    // Handle logout buttons
                    document.querySelectorAll('.logout-btn').forEach(btn => {
                        btn.addEventListener('click', () => {
                            auth.logout();
                            showToast('Logged out successfully.', 'success');
                            setTimeout(() => window.location.href = '/', 500);
                        });
                    });
                });
            </script>
        {% endblock %}
    </body>
</html>
